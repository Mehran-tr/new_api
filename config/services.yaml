# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/{Entity,Repository,Tests}'
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
        public: true

    # Explicitly register services, if necessary
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Repository\:
        resource: '../src/Repository'
        public: true
        tags: ['doctrine.repository_service']


    App\Security\JWTAuthenticator:
        arguments:
            $jwtEncoder: '@lexik_jwt_authentication.encoder'    # Correct service for JWTEncoderInterface
            $userProvider: '@security.user.provider.concrete.app_user_provider'  # User provider
            $logger: '@logger'   # Inject logger service
        tags:
            - { name: 'security.authenticator' }

    App\Doctrine\UserCompanyExtension:
        arguments:
            $security: '@security.helper'
        tags:
            - { name: 'api_platform.doctrine.orm.query_extension.collection' }


    App\EventListener\AccessDeniedListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }