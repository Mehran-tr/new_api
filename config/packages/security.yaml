security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: name

    firewalls:
        # Development firewall
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Login firewall for handling login requests via JSON login
        login:
            pattern: ^/api/login
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/login
                username_path: name
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # API firewall for JWT-protected routes
        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
#            custom_authenticators:
#                - lexik_jwt_authentication.jwt_manager
            custom_authenticators:
                - App\Security\JWTAuthenticator
#            entry_point: App\Security\CustomAccessDeniedHandler
    access_control:
        # Allow unauthenticated access to the /api/login path
        - { path: ^/api/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # Protect all other /api routes, requiring full authentication
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
